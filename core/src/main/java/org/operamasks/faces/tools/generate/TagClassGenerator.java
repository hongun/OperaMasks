/*
 * $Id 
 *
 * Copyright (C) 2006 Operamasks Community.
 * Copyright (C) 2000-2006 Apusic Systems, Inc.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see http://www.gnu.org/licenses.
 */
package org.operamasks.faces.tools.generate;

import static org.operamasks.faces.tools.apt.GeneratorUtils.capitalize;

import java.io.File;
import java.io.IOException;

import org.operamasks.faces.tools.apt.AttributeDeclaration;
import org.operamasks.faces.tools.apt.ComponentDeclaration;
import org.operamasks.faces.tools.apt.IndentationWriter;

import com.sun.mirror.apt.AnnotationProcessorEnvironment;
import com.sun.mirror.apt.Filer;

public class TagClassGenerator extends AbstractGenerator {

	private AnnotationProcessorEnvironment env;
	private ComponentDeclaration comp;

	public TagClassGenerator(AnnotationProcessorEnvironment env,
			ComponentDeclaration comp) {
		this.env = env;
		this.comp = comp;
	}

	public void generate() {
		if (!comp.isEnable()) {
			return;
		}
		IndentationWriter out;
		try {
			out = new IndentationWriter(env.getFiler().createTextFile(
					Filer.Location.SOURCE_TREE, comp.getTagPackageName(),
					new File(comp.getTagClassName() + ".java"), null));
		} catch (IOException ex) {
			env.getMessager().printError(ex.getMessage());
			return;
		}

		out.pln("/**");
		out.pln(" * %s.java", comp.getComponentClassName());
		out.pln(" * DO NOT EDIT THIS FILE");
		out
				.pln(" * This file was automatically generated by %s",
						generatorName);
		out.pln(" * at %s", generateDate);
		out.pln(" */");
		out.pln();

		if (comp.getTagPackageName() != null) {
			out.pln("package %s;", comp.getTagPackageName());
			out.pln();
		}
		if (!comp.isOnlyBuildComponentFile()) {
			out.pln("/**");
			out.pln("* @jsp.tag name=\"%s\" body-content=\"JSP\"", comp
					.getTagName());
			out.pln("*/");
		}
		out.plnI("public class %s extends %s {", comp.getTagClassName(), comp
				.getTagBaseClassName());

		out.plnI("public String getComponentType() {");
		out.pln("return \"%s\";", comp.getComponentType());
		out.Opln("}");
		out.pln();

		out.plnI("public String getRendererType() {");
		if (comp.getRendererType() == null) {
			out.pln("return null;");
		} else {
			out.pln("return \"%s\";", comp.getRendererType());
		}
		out.Opln("}");
		out.pln();

		for (AttributeDeclaration att : comp.getAttributes()) {
			String name = att.getName();
			if ("javax.el.MethodExpression".equals(att.getType())) {
				out.pln("private javax.el.MethodExpression %s;", name);
				out.pln("/**");
				out
						.pln("* @jsp.attribute method-signature=\"java.lang.Object action()\"");
				out.pln("*/");
				out.plnI(
						"public void set%s(javax.el.MethodExpression value) {",
						capitalize(name));
				out.pln("this.%s = value;", name);
				out.Opln("}");
			} else {
				out.pln("private javax.el.ValueExpression %s;", name);
				out.pln("/**");
				out.pln("* @jsp.attribute type=\"%s\"", att.getType());
				out.pln("*/");
				out.plnI("public void set%s(javax.el.ValueExpression value) {",
						capitalize(name));
				out.pln("this.%s = value;", name);
				out.Opln("}");
			}
		}

		out
				.plnI("protected void setProperties(javax.faces.component.UIComponent c) {");
		out.pln("super.setProperties(c);");
		for (AttributeDeclaration att : comp.getAttributes()) {
			String name = att.getName();
			if ("javax.el.MethodExpression".equals(att.getType())) {
				out.pln("((%s)c).set%s(this.%s);", comp
						.getQualifiedComponentClassName(), capitalize(name),
						name);
			} else {
				out.pln("c.setValueExpression(\"%s\", this.%s);", name, name);
			}
		}
		out.Opln("}");
		out.pln();

		out.plnI("public void release() {");
		out.pln("super.release();");
		for (AttributeDeclaration att : comp.getAttributes()) {
			out.pln("this.%s = null;", att.getName());
		}
		out.Opln("}");
		out.pln();

		out.Opln("}");
		out.close();
	}
}
