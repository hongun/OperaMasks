/*
 * $Id 
 *
 * Copyright (C) 2006 Operamasks Community.
 * Copyright (C) 2000-2006 Apusic Systems, Inc.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see http://www.gnu.org/licenses.
 */
package org.operamasks.faces.tools.generate;

import static org.operamasks.faces.tools.apt.GeneratorUtils.capitalize;

import java.io.File;
import java.io.IOException;

import org.operamasks.faces.tools.apt.AttributeDeclaration;
import org.operamasks.faces.tools.apt.ComponentDeclaration;
import org.operamasks.faces.tools.apt.IndentationWriter;

import com.sun.mirror.apt.AnnotationProcessorEnvironment;
import com.sun.mirror.apt.Filer;

public class ComponentClassGenerator extends AbstractGenerator{

    private AnnotationProcessorEnvironment env;
    private ComponentDeclaration comp;

    public ComponentClassGenerator(AnnotationProcessorEnvironment env,
            ComponentDeclaration comp) {
        this.env = env;
        this.comp = comp;
    }

    public void generate() {
    	if(!comp.isEnable()){
    		return;
    	}
        IndentationWriter out;
        try {
            out = new IndentationWriter(
                env.getFiler().createTextFile(Filer.Location.SOURCE_TREE,
                                          comp.getComponentPackageName(),
                                          new File(comp.getComponentClassName() + ".java"),
                                          null));
        } catch (IOException ex) {
            env.getMessager().printError(ex.getMessage());
            return;
        }

        out.pln("/**");
        out.pln(" * %s.java", comp.getComponentClassName());
        out.pln(" * DO NOT EDIT THIS FILE");
        out.pln(" * This file was automatically generated by %s", generatorName);
        out.pln(" * at %s", generateDate);
        out.pln(" */");
        out.pln();

        if (comp.getComponentPackageName() != null) {
            out.pln("package %s;", comp.getComponentPackageName());
            out.pln();
        }

        String baseClassName = comp.getComponentBaseClassName();

//        ClassType superClass = comp.getClassDecl().getSuperclass();
//        if (superClass != null) {
//            baseClassName = superClass.getDeclaration().getSimpleName();
//            if (isComponentClass(superClass.getDeclaration())) {
//                ComponentDeclaration superComp = new ComponentDeclaration(env, superClass.getDeclaration());
//                baseClassName = superComp.getComponentClassName();
//                out.pln("import %s;", superComp.getQualifiedComponentClassName());
//                out.pln();
//            } else {
//                out.pln("import %s;", superClass.getDeclaration().getQualifiedName());
//                out.pln();
//            }
//        }

        if (baseClassName != null) {
            out.pln("import %s;", comp.getBaseQualifiedName());
        }
        if (comp.isProxy()) {
            out.pln("import org.operamasks.faces.annotation.component.Component");
        }
        out.pln();
        
        out.pln("@javax.annotation.Generated(value=\"%s\", date=\"%s\")",
                generatorName, iso8601Format.format(generateDate));
        if (comp.isProxy()) {
            out.pln("@Component");
        }
        
        if (baseClassName == null) {
            out.plnI("public class %s {", comp.getComponentClassName());
        } else {
            out.plnI("public class %s extends %s {", comp.getComponentClassName(), baseClassName);
        }

        if (comp.getComponentFamily() != null) {
            out.pln("public static final String COMPONENT_FAMILY = \"%s\";", comp.getComponentFamily());
        }
        if (comp.getComponentType() != null) {
            out.pln("public static final String COMPONENT_TYPE = \"%s\";", comp.getComponentType());
        }
        out.pln();

        out.plnI("public %s() {", comp.getComponentClassName());
        if (comp.getRendererType() != null) {
            out.pln("super.setRendererType(\"%s\");", comp.getRendererType());
        }
        out.Opln("}");
        out.pln();

        if (comp.getComponentFamily() != null) {
            out.plnI("public String getFamily() {");
            out.pln("return COMPONENT_FAMILY;");
            out.Opln("}");
            out.pln();
        }

        for (AttributeDeclaration attribute : comp.getAttributes()) {
            generateAttribute(out, attribute);
        }

        generateSaveState(out);

        out.Opln("}");
        out.close();
    }

    private void generateAttribute(IndentationWriter out, AttributeDeclaration att) {
        if (att.isAccessorMethodPresent()) {
            return;
        }

        String name = att.getName();
        String type = att.getType();
        String defaultValue = att.getDefaultValue();

        if (att.isPrimitiveType()) {
            out.pln("private boolean %s_set;", name);
            out.pln();

            out.plnI("public %s get%s() {", type, capitalize(name));
            out.plnI("if (this.%s_set) {", name);
            out.pln("return this.%s;", name);
            out.Opln("}");
            out.pln("javax.el.ValueExpression ve = this.getValueExpression(\"%s\");", name);
            out.plnI("if (ve != null) {");
            out.pln("Object value;");
            out.plnI("try {");
            out.pln("value = ve.getValue(this.getFacesContext().getELContext());");
            out.OplnI("} catch (javax.el.ELException e) {");
            out.pln("throw new javax.faces.FacesException(e);");
            out.Opln("}");
            out.plnI("if (value != null) {");
            out.pln("return (%s)value;", att.getWrapperType());
            out.Opln("}");
            out.Opln("}");
            out.pln("return this.%s;", name);
            out.Opln("}");
            out.pln();

            out.plnI("public void set%s(%s value) {", capitalize(name), type);
            out.pln("this.%s = value;", name);
            out.pln("this.%s_set = true;", name);
            out.Opln("}");
            out.pln();
        } else if ("javax.el.MethodExpression".equals(type)) {
            out.plnI("public %s get%s() {", type, capitalize(name));
            out.pln("return this.%s;", name);
            out.Opln("}");
            out.pln();

            out.plnI("public void set%s(%s value) {", capitalize(name), type);
            out.pln("this.%s = value;", name);
            out.Opln("}");
        } else {
            out.plnI("public %s get%s() {", type, capitalize(name));
            out.plnI("if (this.%s != null) {", name);
            out.pln("return this.%s;", name);
            out.Opln("}");
            out.pln("javax.el.ValueExpression ve = this.getValueExpression(\"%s\");", name);
            out.plnI("if (ve != null) {");
            out.plnI("try {");
            out.pln("return (%s)ve.getValue(this.getFacesContext().getELContext());", type);
            out.OplnI("} catch (javax.el.ELException e) {");
            out.pln("throw new javax.faces.FacesException(e);");
            out.Opln("}");
            out.Opln("}");
            out.pln("return %s;", defaultValue);
            out.Opln("}");
            out.pln();

            out.plnI("public void set%s(%s value) {", capitalize(name), type);
            out.pln("this.%s = value;", name);
            out.Opln("}");
            out.pln();
        }
    }

    private void generateSaveState(IndentationWriter out) {
        out.plnI("public Object saveState(javax.faces.context.FacesContext context) {");
        out.plnI("return new Object[] {");
        out.pln("super.saveState(context),");
        for (AttributeDeclaration att : comp.getAttributes()) {
            out.pln("this.%s,", att.getName());
            if (hasAttributeSetField(att)) {
                out.pln("this.%s_set,", att.getName());
            }
        }
        out.Opln("};");
        out.Opln("}");
        out.pln();

        out.plnI("public void restoreState(javax.faces.context.FacesContext context, Object state) {");
        out.pln("Object[] values = (Object[])state;");
        out.pln("super.restoreState(context, values[0]);");
        int index = 0;
        for (AttributeDeclaration att : comp.getAttributes()) {
            out.pln("this.%s = (%s)values[%d];", att.getName(), att.getWrapperType(), ++index);
            if (hasAttributeSetField(att)) {
                out.pln("this.%s_set = (Boolean)values[%d];", att.getName(), ++index);
            }
        }
        out.Opln("}");
        out.pln();
    }

    private boolean hasAttributeSetField(AttributeDeclaration att) {
        return att.isPrimitiveType() && !att.isAccessorMethodPresent();
    }

}
