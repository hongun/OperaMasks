/**
 * UITextField.java
 * DO NOT EDIT THIS FILE
 * This file was automatically generated by org.operamasks.faces.tools.apt.ComponentAnnotationProcessorFactory
 * at Sat Nov 03 15:46:26 CST 2012
 */

package org.operamasks.faces.component.form.impl;

import org.operamasks.faces.component.form.base.UITextFieldBase;

@javax.annotation.Generated(value="org.operamasks.faces.tools.apt.ComponentAnnotationProcessorFactory", date="2012-11-03T15:46:26Z")
public class UITextField extends UITextFieldBase {
    public static final String COMPONENT_FAMILY = "org.operamasks.faces.component.form.impl.UITextField";
    public static final String COMPONENT_TYPE = "org.operamasks.faces.component.form.impl.UITextField";

    public UITextField() {
	super.setRendererType("org.operamasks.faces.component.form.impl.UITextField");
    }

    public String getFamily() {
	return COMPONENT_FAMILY;
    }

    public java.lang.Boolean getAllowBlank() {
	if (this.allowBlank != null) {
	    return this.allowBlank;
	}
	javax.el.ValueExpression ve = this.getValueExpression("allowBlank");
	if (ve != null) {
	    try {
		return (java.lang.Boolean)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setAllowBlank(java.lang.Boolean value) {
	this.allowBlank = value;
    }

    public java.lang.String getBlankText() {
	if (this.blankText != null) {
	    return this.blankText;
	}
	javax.el.ValueExpression ve = this.getValueExpression("blankText");
	if (ve != null) {
	    try {
		return (java.lang.String)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setBlankText(java.lang.String value) {
	this.blankText = value;
    }

    public java.lang.Boolean getDisableKeyFilter() {
	if (this.disableKeyFilter != null) {
	    return this.disableKeyFilter;
	}
	javax.el.ValueExpression ve = this.getValueExpression("disableKeyFilter");
	if (ve != null) {
	    try {
		return (java.lang.Boolean)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setDisableKeyFilter(java.lang.Boolean value) {
	this.disableKeyFilter = value;
    }

    public java.lang.String getEmptyClass() {
	if (this.emptyClass != null) {
	    return this.emptyClass;
	}
	javax.el.ValueExpression ve = this.getValueExpression("emptyClass");
	if (ve != null) {
	    try {
		return (java.lang.String)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setEmptyClass(java.lang.String value) {
	this.emptyClass = value;
    }

    public java.lang.String getEmptyText() {
	if (this.emptyText != null) {
	    return this.emptyText;
	}
	javax.el.ValueExpression ve = this.getValueExpression("emptyText");
	if (ve != null) {
	    try {
		return (java.lang.String)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setEmptyText(java.lang.String value) {
	this.emptyText = value;
    }

    public java.lang.Boolean getGrow() {
	if (this.grow != null) {
	    return this.grow;
	}
	javax.el.ValueExpression ve = this.getValueExpression("grow");
	if (ve != null) {
	    try {
		return (java.lang.Boolean)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setGrow(java.lang.Boolean value) {
	this.grow = value;
    }

    public java.lang.Integer getGrowMax() {
	if (this.growMax != null) {
	    return this.growMax;
	}
	javax.el.ValueExpression ve = this.getValueExpression("growMax");
	if (ve != null) {
	    try {
		return (java.lang.Integer)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setGrowMax(java.lang.Integer value) {
	this.growMax = value;
    }

    public java.lang.Integer getGrowMin() {
	if (this.growMin != null) {
	    return this.growMin;
	}
	javax.el.ValueExpression ve = this.getValueExpression("growMin");
	if (ve != null) {
	    try {
		return (java.lang.Integer)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setGrowMin(java.lang.Integer value) {
	this.growMin = value;
    }

    public java.lang.String getMaskRe() {
	if (this.maskRe != null) {
	    return this.maskRe;
	}
	javax.el.ValueExpression ve = this.getValueExpression("maskRe");
	if (ve != null) {
	    try {
		return (java.lang.String)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setMaskRe(java.lang.String value) {
	this.maskRe = value;
    }

    public java.lang.Integer getMaxLength() {
	if (this.maxLength != null) {
	    return this.maxLength;
	}
	javax.el.ValueExpression ve = this.getValueExpression("maxLength");
	if (ve != null) {
	    try {
		return (java.lang.Integer)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setMaxLength(java.lang.Integer value) {
	this.maxLength = value;
    }

    public java.lang.String getMaxLengthText() {
	if (this.maxLengthText != null) {
	    return this.maxLengthText;
	}
	javax.el.ValueExpression ve = this.getValueExpression("maxLengthText");
	if (ve != null) {
	    try {
		return (java.lang.String)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setMaxLengthText(java.lang.String value) {
	this.maxLengthText = value;
    }

    public java.lang.Integer getMinLength() {
	if (this.minLength != null) {
	    return this.minLength;
	}
	javax.el.ValueExpression ve = this.getValueExpression("minLength");
	if (ve != null) {
	    try {
		return (java.lang.Integer)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setMinLength(java.lang.Integer value) {
	this.minLength = value;
    }

    public java.lang.String getMinLengthText() {
	if (this.minLengthText != null) {
	    return this.minLengthText;
	}
	javax.el.ValueExpression ve = this.getValueExpression("minLengthText");
	if (ve != null) {
	    try {
		return (java.lang.String)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setMinLengthText(java.lang.String value) {
	this.minLengthText = value;
    }

    public java.lang.String getRegex() {
	if (this.regex != null) {
	    return this.regex;
	}
	javax.el.ValueExpression ve = this.getValueExpression("regex");
	if (ve != null) {
	    try {
		return (java.lang.String)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setRegex(java.lang.String value) {
	this.regex = value;
    }

    public java.lang.String getRegexText() {
	if (this.regexText != null) {
	    return this.regexText;
	}
	javax.el.ValueExpression ve = this.getValueExpression("regexText");
	if (ve != null) {
	    try {
		return (java.lang.String)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setRegexText(java.lang.String value) {
	this.regexText = value;
    }

    public java.lang.Boolean getSelectOnFocus() {
	if (this.selectOnFocus != null) {
	    return this.selectOnFocus;
	}
	javax.el.ValueExpression ve = this.getValueExpression("selectOnFocus");
	if (ve != null) {
	    try {
		return (java.lang.Boolean)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setSelectOnFocus(java.lang.Boolean value) {
	this.selectOnFocus = value;
    }

    public java.lang.String getVtype() {
	if (this.vtype != null) {
	    return this.vtype;
	}
	javax.el.ValueExpression ve = this.getValueExpression("vtype");
	if (ve != null) {
	    try {
		return (java.lang.String)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setVtype(java.lang.String value) {
	this.vtype = value;
    }

    public java.lang.String getVtypeText() {
	if (this.vtypeText != null) {
	    return this.vtypeText;
	}
	javax.el.ValueExpression ve = this.getValueExpression("vtypeText");
	if (ve != null) {
	    try {
		return (java.lang.String)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setVtypeText(java.lang.String value) {
	this.vtypeText = value;
    }

    public java.lang.String getValue() {
	if (this.value != null) {
	    return this.value;
	}
	javax.el.ValueExpression ve = this.getValueExpression("value");
	if (ve != null) {
	    try {
		return (java.lang.String)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setValue(java.lang.String value) {
	this.value = value;
    }

    public Object saveState(javax.faces.context.FacesContext context) {
	return new Object[] {
	    super.saveState(context),
	    this.allowBlank,
	    this.blankText,
	    this.disableKeyFilter,
	    this.emptyClass,
	    this.emptyText,
	    this.grow,
	    this.growMax,
	    this.growMin,
	    this.maskRe,
	    this.maxLength,
	    this.maxLengthText,
	    this.minLength,
	    this.minLengthText,
	    this.regex,
	    this.regexText,
	    this.selectOnFocus,
	    this.vtype,
	    this.vtypeText,
	    this.value,
	};
    }

    public void restoreState(javax.faces.context.FacesContext context, Object state) {
	Object[] values = (Object[])state;
	super.restoreState(context, values[0]);
	this.allowBlank = (java.lang.Boolean)values[1];
	this.blankText = (java.lang.String)values[2];
	this.disableKeyFilter = (java.lang.Boolean)values[3];
	this.emptyClass = (java.lang.String)values[4];
	this.emptyText = (java.lang.String)values[5];
	this.grow = (java.lang.Boolean)values[6];
	this.growMax = (java.lang.Integer)values[7];
	this.growMin = (java.lang.Integer)values[8];
	this.maskRe = (java.lang.String)values[9];
	this.maxLength = (java.lang.Integer)values[10];
	this.maxLengthText = (java.lang.String)values[11];
	this.minLength = (java.lang.Integer)values[12];
	this.minLengthText = (java.lang.String)values[13];
	this.regex = (java.lang.String)values[14];
	this.regexText = (java.lang.String)values[15];
	this.selectOnFocus = (java.lang.Boolean)values[16];
	this.vtype = (java.lang.String)values[17];
	this.vtypeText = (java.lang.String)values[18];
	this.value = (java.lang.String)values[19];
    }

}
