/**
 * UITreeNode.java
 * DO NOT EDIT THIS FILE
 * This file was automatically generated by org.operamasks.faces.tools.apt.ComponentAnnotationProcessorFactory
 * at Sat Nov 03 15:46:27 CST 2012
 */

package org.operamasks.faces.component.tree.impl;

import org.operamasks.faces.component.tree.base.UITreeNodeBase;

@javax.annotation.Generated(value="org.operamasks.faces.tools.apt.ComponentAnnotationProcessorFactory", date="2012-11-03T15:46:27Z")
public class UITreeNode extends UITreeNodeBase {
    public static final String COMPONENT_FAMILY = "org.operamasks.faces.component.tree.impl.UITreeNode";
    public static final String COMPONENT_TYPE = "org.operamasks.faces.component.tree.impl.UITreeNode";

    public UITreeNode() {
	super.setRendererType("org.operamasks.faces.component.tree.impl.UITreeNode");
    }

    public String getFamily() {
	return COMPONENT_FAMILY;
    }

    public java.lang.Boolean getAllowChildren() {
	if (this.allowChildren != null) {
	    return this.allowChildren;
	}
	javax.el.ValueExpression ve = this.getValueExpression("allowChildren");
	if (ve != null) {
	    try {
		return (java.lang.Boolean)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setAllowChildren(java.lang.Boolean value) {
	this.allowChildren = value;
    }

    public java.lang.Boolean getDisabled() {
	if (this.disabled != null) {
	    return this.disabled;
	}
	javax.el.ValueExpression ve = this.getValueExpression("disabled");
	if (ve != null) {
	    try {
		return (java.lang.Boolean)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setDisabled(java.lang.Boolean value) {
	this.disabled = value;
    }

    public java.lang.Boolean getExpandable() {
	if (this.expandable != null) {
	    return this.expandable;
	}
	javax.el.ValueExpression ve = this.getValueExpression("expandable");
	if (ve != null) {
	    try {
		return (java.lang.Boolean)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setExpandable(java.lang.Boolean value) {
	this.expandable = value;
    }

    public java.lang.Boolean getExpanded() {
	if (this.expanded != null) {
	    return this.expanded;
	}
	javax.el.ValueExpression ve = this.getValueExpression("expanded");
	if (ve != null) {
	    try {
		return (java.lang.Boolean)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setExpanded(java.lang.Boolean value) {
	this.expanded = value;
    }

    public java.lang.String getHref() {
	if (this.href != null) {
	    return this.href;
	}
	javax.el.ValueExpression ve = this.getValueExpression("href");
	if (ve != null) {
	    try {
		return (java.lang.String)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setHref(java.lang.String value) {
	this.href = value;
    }

    public java.lang.String getHrefTarget() {
	if (this.hrefTarget != null) {
	    return this.hrefTarget;
	}
	javax.el.ValueExpression ve = this.getValueExpression("hrefTarget");
	if (ve != null) {
	    try {
		return (java.lang.String)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setHrefTarget(java.lang.String value) {
	this.hrefTarget = value;
    }

    public java.lang.Boolean getLeaf() {
	if (this.leaf != null) {
	    return this.leaf;
	}
	javax.el.ValueExpression ve = this.getValueExpression("leaf");
	if (ve != null) {
	    try {
		return (java.lang.Boolean)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setLeaf(java.lang.Boolean value) {
	this.leaf = value;
    }

    public java.lang.String getQtip() {
	if (this.qtip != null) {
	    return this.qtip;
	}
	javax.el.ValueExpression ve = this.getValueExpression("qtip");
	if (ve != null) {
	    try {
		return (java.lang.String)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setQtip(java.lang.String value) {
	this.qtip = value;
    }

    public java.lang.Boolean getSingleClickExpand() {
	if (this.singleClickExpand != null) {
	    return this.singleClickExpand;
	}
	javax.el.ValueExpression ve = this.getValueExpression("singleClickExpand");
	if (ve != null) {
	    try {
		return (java.lang.Boolean)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setSingleClickExpand(java.lang.Boolean value) {
	this.singleClickExpand = value;
    }

    public java.lang.String getCls() {
	if (this.cls != null) {
	    return this.cls;
	}
	javax.el.ValueExpression ve = this.getValueExpression("cls");
	if (ve != null) {
	    try {
		return (java.lang.String)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setCls(java.lang.String value) {
	this.cls = value;
    }

    public java.lang.String getIconCls() {
	if (this.iconCls != null) {
	    return this.iconCls;
	}
	javax.el.ValueExpression ve = this.getValueExpression("iconCls");
	if (ve != null) {
	    try {
		return (java.lang.String)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setIconCls(java.lang.String value) {
	this.iconCls = value;
    }

    public java.lang.Boolean getCascade() {
	if (this.cascade != null) {
	    return this.cascade;
	}
	javax.el.ValueExpression ve = this.getValueExpression("cascade");
	if (ve != null) {
	    try {
		return (java.lang.Boolean)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setCascade(java.lang.Boolean value) {
	this.cascade = value;
    }

    public java.lang.Object getUserData() {
	if (this.userData != null) {
	    return this.userData;
	}
	javax.el.ValueExpression ve = this.getValueExpression("userData");
	if (ve != null) {
	    try {
		return (java.lang.Object)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setUserData(java.lang.Object value) {
	this.userData = value;
    }

    private boolean updateAble_set;

    public boolean getUpdateAble() {
	if (this.updateAble_set) {
	    return this.updateAble;
	}
	javax.el.ValueExpression ve = this.getValueExpression("updateAble");
	if (ve != null) {
	    Object value;
	    try {
		value = ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	    if (value != null) {
		return (Boolean)value;
	    }
	}
	return this.updateAble;
    }

    public void setUpdateAble(boolean value) {
	this.updateAble = value;
	this.updateAble_set = true;
    }

    public Object saveState(javax.faces.context.FacesContext context) {
	return new Object[] {
	    super.saveState(context),
	    this.text,
	    this.icon,
	    this.id,
	    this.checked,
	    this.allowChildren,
	    this.disabled,
	    this.expandable,
	    this.expanded,
	    this.href,
	    this.hrefTarget,
	    this.leaf,
	    this.qtip,
	    this.singleClickExpand,
	    this.cls,
	    this.iconCls,
	    this.cascade,
	    this.userData,
	    this.updateAble,
	    this.updateAble_set,
	};
    }

    public void restoreState(javax.faces.context.FacesContext context, Object state) {
	Object[] values = (Object[])state;
	super.restoreState(context, values[0]);
	this.text = (java.lang.String)values[1];
	this.icon = (java.lang.String)values[2];
	this.id = (java.lang.String)values[3];
	this.checked = (java.lang.Boolean)values[4];
	this.allowChildren = (java.lang.Boolean)values[5];
	this.disabled = (java.lang.Boolean)values[6];
	this.expandable = (java.lang.Boolean)values[7];
	this.expanded = (java.lang.Boolean)values[8];
	this.href = (java.lang.String)values[9];
	this.hrefTarget = (java.lang.String)values[10];
	this.leaf = (java.lang.Boolean)values[11];
	this.qtip = (java.lang.String)values[12];
	this.singleClickExpand = (java.lang.Boolean)values[13];
	this.cls = (java.lang.String)values[14];
	this.iconCls = (java.lang.String)values[15];
	this.cascade = (java.lang.Boolean)values[16];
	this.userData = (java.lang.Object)values[17];
	this.updateAble = (Boolean)values[18];
	this.updateAble_set = (Boolean)values[19];
    }

}
