/**
 * UIWindow.java
 * DO NOT EDIT THIS FILE
 * This file was automatically generated by org.operamasks.faces.tools.apt.ComponentAnnotationProcessorFactory
 * at Sat Nov 03 15:46:26 CST 2012
 */

package org.operamasks.faces.component.layout.impl;

import org.operamasks.faces.component.layout.base.UIWindowBase;

@javax.annotation.Generated(value="org.operamasks.faces.tools.apt.ComponentAnnotationProcessorFactory", date="2012-11-03T15:46:26Z")
public class UIWindow extends UIWindowBase {
    public static final String COMPONENT_FAMILY = "org.operamasks.faces.component.layout.impl.UIWindow";
    public static final String COMPONENT_TYPE = "org.operamasks.faces.component.layout.impl.UIWindow";

    public UIWindow() {
	super.setRendererType("org.operamasks.faces.component.layout.impl.UIWindow");
    }

    public String getFamily() {
	return COMPONENT_FAMILY;
    }

    public java.lang.String getAnimateTarget() {
	if (this.animateTarget != null) {
	    return this.animateTarget;
	}
	javax.el.ValueExpression ve = this.getValueExpression("animateTarget");
	if (ve != null) {
	    try {
		return (java.lang.String)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setAnimateTarget(java.lang.String value) {
	this.animateTarget = value;
    }

    public java.lang.String getBaseCls() {
	if (this.baseCls != null) {
	    return this.baseCls;
	}
	javax.el.ValueExpression ve = this.getValueExpression("baseCls");
	if (ve != null) {
	    try {
		return (java.lang.String)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setBaseCls(java.lang.String value) {
	this.baseCls = value;
    }

    public java.lang.Boolean getClosable() {
	if (this.closable != null) {
	    return this.closable;
	}
	javax.el.ValueExpression ve = this.getValueExpression("closable");
	if (ve != null) {
	    try {
		return (java.lang.Boolean)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setClosable(java.lang.Boolean value) {
	this.closable = value;
    }

    public java.lang.Boolean getCloseAction() {
	if (this.closeAction != null) {
	    return this.closeAction;
	}
	javax.el.ValueExpression ve = this.getValueExpression("closeAction");
	if (ve != null) {
	    try {
		return (java.lang.Boolean)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setCloseAction(java.lang.Boolean value) {
	this.closeAction = value;
    }

    public java.lang.Boolean getConstrain() {
	if (this.constrain != null) {
	    return this.constrain;
	}
	javax.el.ValueExpression ve = this.getValueExpression("constrain");
	if (ve != null) {
	    try {
		return (java.lang.Boolean)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setConstrain(java.lang.Boolean value) {
	this.constrain = value;
    }

    public java.lang.Boolean getConstrainHeader() {
	if (this.constrainHeader != null) {
	    return this.constrainHeader;
	}
	javax.el.ValueExpression ve = this.getValueExpression("constrainHeader");
	if (ve != null) {
	    try {
		return (java.lang.Boolean)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setConstrainHeader(java.lang.Boolean value) {
	this.constrainHeader = value;
    }

    public java.lang.Boolean getExpandOnShow() {
	if (this.expandOnShow != null) {
	    return this.expandOnShow;
	}
	javax.el.ValueExpression ve = this.getValueExpression("expandOnShow");
	if (ve != null) {
	    try {
		return (java.lang.Boolean)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setExpandOnShow(java.lang.Boolean value) {
	this.expandOnShow = value;
    }

    public java.lang.Boolean getMaximizable() {
	if (this.maximizable != null) {
	    return this.maximizable;
	}
	javax.el.ValueExpression ve = this.getValueExpression("maximizable");
	if (ve != null) {
	    try {
		return (java.lang.Boolean)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setMaximizable(java.lang.Boolean value) {
	this.maximizable = value;
    }

    public java.lang.Integer getMinHeight() {
	if (this.minHeight != null) {
	    return this.minHeight;
	}
	javax.el.ValueExpression ve = this.getValueExpression("minHeight");
	if (ve != null) {
	    try {
		return (java.lang.Integer)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setMinHeight(java.lang.Integer value) {
	this.minHeight = value;
    }

    public java.lang.Integer getMinWidth() {
	if (this.minWidth != null) {
	    return this.minWidth;
	}
	javax.el.ValueExpression ve = this.getValueExpression("minWidth");
	if (ve != null) {
	    try {
		return (java.lang.Integer)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setMinWidth(java.lang.Integer value) {
	this.minWidth = value;
    }

    public java.lang.Boolean getMinimizable() {
	if (this.minimizable != null) {
	    return this.minimizable;
	}
	javax.el.ValueExpression ve = this.getValueExpression("minimizable");
	if (ve != null) {
	    try {
		return (java.lang.Boolean)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setMinimizable(java.lang.Boolean value) {
	this.minimizable = value;
    }

    public java.lang.String getOnEsc() {
	if (this.onEsc != null) {
	    return this.onEsc;
	}
	javax.el.ValueExpression ve = this.getValueExpression("onEsc");
	if (ve != null) {
	    try {
		return (java.lang.String)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setOnEsc(java.lang.String value) {
	this.onEsc = value;
    }

    public java.lang.Boolean getPlain() {
	if (this.plain != null) {
	    return this.plain;
	}
	javax.el.ValueExpression ve = this.getValueExpression("plain");
	if (ve != null) {
	    try {
		return (java.lang.Boolean)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setPlain(java.lang.Boolean value) {
	this.plain = value;
    }

    public java.lang.Boolean getResizable() {
	if (this.resizable != null) {
	    return this.resizable;
	}
	javax.el.ValueExpression ve = this.getValueExpression("resizable");
	if (ve != null) {
	    try {
		return (java.lang.Boolean)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setResizable(java.lang.Boolean value) {
	this.resizable = value;
    }

    public java.lang.String getResizeHandles() {
	if (this.resizeHandles != null) {
	    return this.resizeHandles;
	}
	javax.el.ValueExpression ve = this.getValueExpression("resizeHandles");
	if (ve != null) {
	    try {
		return (java.lang.String)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setResizeHandles(java.lang.String value) {
	this.resizeHandles = value;
    }

    public java.lang.String getOnclose() {
	if (this.onclose != null) {
	    return this.onclose;
	}
	javax.el.ValueExpression ve = this.getValueExpression("onclose");
	if (ve != null) {
	    try {
		return (java.lang.String)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setOnclose(java.lang.String value) {
	this.onclose = value;
    }

    public Object saveState(javax.faces.context.FacesContext context) {
	return new Object[] {
	    super.saveState(context),
	    this.animateTarget,
	    this.baseCls,
	    this.closable,
	    this.closeAction,
	    this.constrain,
	    this.constrainHeader,
	    this.expandOnShow,
	    this.maximizable,
	    this.minHeight,
	    this.minWidth,
	    this.minimizable,
	    this.modal,
	    this.onEsc,
	    this.plain,
	    this.resizable,
	    this.resizeHandles,
	    this.onclose,
	};
    }

    public void restoreState(javax.faces.context.FacesContext context, Object state) {
	Object[] values = (Object[])state;
	super.restoreState(context, values[0]);
	this.animateTarget = (java.lang.String)values[1];
	this.baseCls = (java.lang.String)values[2];
	this.closable = (java.lang.Boolean)values[3];
	this.closeAction = (java.lang.Boolean)values[4];
	this.constrain = (java.lang.Boolean)values[5];
	this.constrainHeader = (java.lang.Boolean)values[6];
	this.expandOnShow = (java.lang.Boolean)values[7];
	this.maximizable = (java.lang.Boolean)values[8];
	this.minHeight = (java.lang.Integer)values[9];
	this.minWidth = (java.lang.Integer)values[10];
	this.minimizable = (java.lang.Boolean)values[11];
	this.modal = (java.lang.Boolean)values[12];
	this.onEsc = (java.lang.String)values[13];
	this.plain = (java.lang.Boolean)values[14];
	this.resizable = (java.lang.Boolean)values[15];
	this.resizeHandles = (java.lang.String)values[16];
	this.onclose = (java.lang.String)values[17];
    }

}
