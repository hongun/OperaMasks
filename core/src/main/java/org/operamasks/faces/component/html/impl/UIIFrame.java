/**
 * UIIFrame.java
 * DO NOT EDIT THIS FILE
 * This file was automatically generated by org.operamasks.faces.tools.apt.ComponentAnnotationProcessorFactory
 * at Sat Nov 03 15:46:26 CST 2012
 */

package org.operamasks.faces.component.html.impl;

import org.operamasks.faces.component.html.base.UIIFrameBase;

@javax.annotation.Generated(value="org.operamasks.faces.tools.apt.ComponentAnnotationProcessorFactory", date="2012-11-03T15:46:26Z")
public class UIIFrame extends UIIFrameBase {
    public static final String COMPONENT_FAMILY = "org.operamasks.faces.component.html.impl.UIIFrame";
    public static final String COMPONENT_TYPE = "org.operamasks.faces.component.html.impl.UIIFrame";

    public UIIFrame() {
	super.setRendererType("org.operamasks.faces.component.html.impl.UIIFrame");
    }

    public String getFamily() {
	return COMPONENT_FAMILY;
    }

    public java.lang.String getAlign() {
	if (this.align != null) {
	    return this.align;
	}
	javax.el.ValueExpression ve = this.getValueExpression("align");
	if (ve != null) {
	    try {
		return (java.lang.String)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setAlign(java.lang.String value) {
	this.align = value;
    }

    public java.lang.Integer getBorder() {
	if (this.border != null) {
	    return this.border;
	}
	javax.el.ValueExpression ve = this.getValueExpression("border");
	if (ve != null) {
	    try {
		return (java.lang.Integer)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setBorder(java.lang.Integer value) {
	this.border = value;
    }

    public java.lang.Integer getWidth() {
	if (this.width != null) {
	    return this.width;
	}
	javax.el.ValueExpression ve = this.getValueExpression("width");
	if (ve != null) {
	    try {
		return (java.lang.Integer)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setWidth(java.lang.Integer value) {
	this.width = value;
    }

    public java.lang.Integer getHeight() {
	if (this.height != null) {
	    return this.height;
	}
	javax.el.ValueExpression ve = this.getValueExpression("height");
	if (ve != null) {
	    try {
		return (java.lang.Integer)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setHeight(java.lang.Integer value) {
	this.height = value;
    }

    public java.lang.String getFrameborder() {
	if (this.frameborder != null) {
	    return this.frameborder;
	}
	javax.el.ValueExpression ve = this.getValueExpression("frameborder");
	if (ve != null) {
	    try {
		return (java.lang.String)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setFrameborder(java.lang.String value) {
	this.frameborder = value;
    }

    public java.lang.String getName() {
	if (this.name != null) {
	    return this.name;
	}
	javax.el.ValueExpression ve = this.getValueExpression("name");
	if (ve != null) {
	    try {
		return (java.lang.String)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setName(java.lang.String value) {
	this.name = value;
    }

    public java.lang.String getScrolling() {
	if (this.scrolling != null) {
	    return this.scrolling;
	}
	javax.el.ValueExpression ve = this.getValueExpression("scrolling");
	if (ve != null) {
	    try {
		return (java.lang.String)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setScrolling(java.lang.String value) {
	this.scrolling = value;
    }

    public java.lang.String getStyle() {
	if (this.style != null) {
	    return this.style;
	}
	javax.el.ValueExpression ve = this.getValueExpression("style");
	if (ve != null) {
	    try {
		return (java.lang.String)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setStyle(java.lang.String value) {
	this.style = value;
    }

    public Object saveState(javax.faces.context.FacesContext context) {
	return new Object[] {
	    super.saveState(context),
	    this.align,
	    this.border,
	    this.width,
	    this.height,
	    this.frameborder,
	    this.name,
	    this.scrolling,
	    this.src,
	    this.style,
	};
    }

    public void restoreState(javax.faces.context.FacesContext context, Object state) {
	Object[] values = (Object[])state;
	super.restoreState(context, values[0]);
	this.align = (java.lang.String)values[1];
	this.border = (java.lang.Integer)values[2];
	this.width = (java.lang.Integer)values[3];
	this.height = (java.lang.Integer)values[4];
	this.frameborder = (java.lang.String)values[5];
	this.name = (java.lang.String)values[6];
	this.scrolling = (java.lang.String)values[7];
	this.src = (java.lang.String)values[8];
	this.style = (java.lang.String)values[9];
    }

}
