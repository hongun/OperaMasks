/**
 * UICheckBox.java
 * DO NOT EDIT THIS FILE
 * This file was automatically generated by org.operamasks.faces.tools.apt.ComponentAnnotationProcessorFactory
 * at Sat Nov 03 15:46:26 CST 2012
 */

package org.operamasks.faces.component.form.impl;

import org.operamasks.faces.component.form.base.UICheckBoxBase;

@javax.annotation.Generated(value="org.operamasks.faces.tools.apt.ComponentAnnotationProcessorFactory", date="2012-11-03T15:46:26Z")
public class UICheckBox extends UICheckBoxBase {
    public static final String COMPONENT_FAMILY = "org.operamasks.faces.component.form.impl.UICheckBox";
    public static final String COMPONENT_TYPE = "org.operamasks.faces.component.form.impl.UICheckBox";

    public UICheckBox() {
	super.setRendererType("org.operamasks.faces.component.form.impl.UICheckBox");
    }

    public String getFamily() {
	return COMPONENT_FAMILY;
    }

    public java.lang.String getBoxLabel() {
	if (this.boxLabel != null) {
	    return this.boxLabel;
	}
	javax.el.ValueExpression ve = this.getValueExpression("boxLabel");
	if (ve != null) {
	    try {
		return (java.lang.String)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setBoxLabel(java.lang.String value) {
	this.boxLabel = value;
    }

    public java.lang.Boolean getChecked() {
	if (this.checked != null) {
	    return this.checked;
	}
	javax.el.ValueExpression ve = this.getValueExpression("checked");
	if (ve != null) {
	    try {
		return (java.lang.Boolean)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setChecked(java.lang.Boolean value) {
	this.checked = value;
    }

    public java.lang.String getFieldClass() {
	if (this.fieldClass != null) {
	    return this.fieldClass;
	}
	javax.el.ValueExpression ve = this.getValueExpression("fieldClass");
	if (ve != null) {
	    try {
		return (java.lang.String)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setFieldClass(java.lang.String value) {
	this.fieldClass = value;
    }

    public java.lang.String getFocusClass() {
	if (this.focusClass != null) {
	    return this.focusClass;
	}
	javax.el.ValueExpression ve = this.getValueExpression("focusClass");
	if (ve != null) {
	    try {
		return (java.lang.String)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setFocusClass(java.lang.String value) {
	this.focusClass = value;
    }

    public java.lang.String getInputValue() {
	if (this.inputValue != null) {
	    return this.inputValue;
	}
	javax.el.ValueExpression ve = this.getValueExpression("inputValue");
	if (ve != null) {
	    try {
		return (java.lang.String)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setInputValue(java.lang.String value) {
	this.inputValue = value;
    }

    public java.lang.String getOncheck() {
	if (this.oncheck != null) {
	    return this.oncheck;
	}
	javax.el.ValueExpression ve = this.getValueExpression("oncheck");
	if (ve != null) {
	    try {
		return (java.lang.String)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setOncheck(java.lang.String value) {
	this.oncheck = value;
    }

    public Object saveState(javax.faces.context.FacesContext context) {
	return new Object[] {
	    super.saveState(context),
	    this.boxLabel,
	    this.checked,
	    this.fieldClass,
	    this.focusClass,
	    this.inputValue,
	    this.oncheck,
	};
    }

    public void restoreState(javax.faces.context.FacesContext context, Object state) {
	Object[] values = (Object[])state;
	super.restoreState(context, values[0]);
	this.boxLabel = (java.lang.String)values[1];
	this.checked = (java.lang.Boolean)values[2];
	this.fieldClass = (java.lang.String)values[3];
	this.focusClass = (java.lang.String)values[4];
	this.inputValue = (java.lang.String)values[5];
	this.oncheck = (java.lang.String)values[6];
    }

}
