/**
 * UITree.java
 * DO NOT EDIT THIS FILE
 * This file was automatically generated by org.operamasks.faces.tools.apt.ComponentAnnotationProcessorFactory
 * at Sat Nov 03 15:46:26 CST 2012
 */

package org.operamasks.faces.component.tree.impl;

import org.operamasks.faces.component.tree.base.UITreeBase;

@javax.annotation.Generated(value="org.operamasks.faces.tools.apt.ComponentAnnotationProcessorFactory", date="2012-11-03T15:46:26Z")
public class UITree extends UITreeBase {
    public static final String COMPONENT_FAMILY = "org.operamasks.faces.component.tree.impl.UITree";
    public static final String COMPONENT_TYPE = "org.operamasks.faces.component.tree.impl.UITree";

    public UITree() {
	super.setRendererType("org.operamasks.faces.component.tree.impl.UITree");
    }

    public String getFamily() {
	return COMPONENT_FAMILY;
    }

    public java.lang.Boolean getAnimCollapse() {
	if (this.animCollapse != null) {
	    return this.animCollapse;
	}
	javax.el.ValueExpression ve = this.getValueExpression("animCollapse");
	if (ve != null) {
	    try {
		return (java.lang.Boolean)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setAnimCollapse(java.lang.Boolean value) {
	this.animCollapse = value;
    }

    public java.lang.Boolean getAutoHeight() {
	if (this.autoHeight != null) {
	    return this.autoHeight;
	}
	javax.el.ValueExpression ve = this.getValueExpression("autoHeight");
	if (ve != null) {
	    try {
		return (java.lang.Boolean)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setAutoHeight(java.lang.Boolean value) {
	this.autoHeight = value;
    }

    public java.lang.Boolean getAutoScroll() {
	if (this.autoScroll != null) {
	    return this.autoScroll;
	}
	javax.el.ValueExpression ve = this.getValueExpression("autoScroll");
	if (ve != null) {
	    try {
		return (java.lang.Boolean)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setAutoScroll(java.lang.Boolean value) {
	this.autoScroll = value;
    }

    public java.lang.Boolean getAutoShow() {
	if (this.autoShow != null) {
	    return this.autoShow;
	}
	javax.el.ValueExpression ve = this.getValueExpression("autoShow");
	if (ve != null) {
	    try {
		return (java.lang.Boolean)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setAutoShow(java.lang.Boolean value) {
	this.autoShow = value;
    }

    public java.lang.Boolean getAutoWidth() {
	if (this.autoWidth != null) {
	    return this.autoWidth;
	}
	javax.el.ValueExpression ve = this.getValueExpression("autoWidth");
	if (ve != null) {
	    try {
		return (java.lang.Boolean)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setAutoWidth(java.lang.Boolean value) {
	this.autoWidth = value;
    }

    public java.lang.Boolean getBodyBorder() {
	if (this.bodyBorder != null) {
	    return this.bodyBorder;
	}
	javax.el.ValueExpression ve = this.getValueExpression("bodyBorder");
	if (ve != null) {
	    try {
		return (java.lang.Boolean)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setBodyBorder(java.lang.Boolean value) {
	this.bodyBorder = value;
    }

    public java.lang.String getBodyStyle() {
	if (this.bodyStyle != null) {
	    return this.bodyStyle;
	}
	javax.el.ValueExpression ve = this.getValueExpression("bodyStyle");
	if (ve != null) {
	    try {
		return (java.lang.String)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setBodyStyle(java.lang.String value) {
	this.bodyStyle = value;
    }

    public java.lang.Boolean getBorder() {
	if (this.border != null) {
	    return this.border;
	}
	javax.el.ValueExpression ve = this.getValueExpression("border");
	if (ve != null) {
	    try {
		return (java.lang.Boolean)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setBorder(java.lang.Boolean value) {
	this.border = value;
    }

    public java.lang.Boolean getCollapseFirst() {
	if (this.collapseFirst != null) {
	    return this.collapseFirst;
	}
	javax.el.ValueExpression ve = this.getValueExpression("collapseFirst");
	if (ve != null) {
	    try {
		return (java.lang.Boolean)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setCollapseFirst(java.lang.Boolean value) {
	this.collapseFirst = value;
    }

    public java.lang.Boolean getCollapsed() {
	if (this.collapsed != null) {
	    return this.collapsed;
	}
	javax.el.ValueExpression ve = this.getValueExpression("collapsed");
	if (ve != null) {
	    try {
		return (java.lang.Boolean)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setCollapsed(java.lang.Boolean value) {
	this.collapsed = value;
    }

    public java.lang.Boolean getCollapsible() {
	if (this.collapsible != null) {
	    return this.collapsible;
	}
	javax.el.ValueExpression ve = this.getValueExpression("collapsible");
	if (ve != null) {
	    try {
		return (java.lang.Boolean)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setCollapsible(java.lang.Boolean value) {
	this.collapsible = value;
    }

    public java.lang.Boolean getDraggable() {
	if (this.draggable != null) {
	    return this.draggable;
	}
	javax.el.ValueExpression ve = this.getValueExpression("draggable");
	if (ve != null) {
	    try {
		return (java.lang.Boolean)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setDraggable(java.lang.Boolean value) {
	this.draggable = value;
    }

    public java.lang.Boolean getFloating() {
	if (this.floating != null) {
	    return this.floating;
	}
	javax.el.ValueExpression ve = this.getValueExpression("floating");
	if (ve != null) {
	    try {
		return (java.lang.Boolean)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setFloating(java.lang.Boolean value) {
	this.floating = value;
    }

    public java.lang.Boolean getFooter() {
	if (this.footer != null) {
	    return this.footer;
	}
	javax.el.ValueExpression ve = this.getValueExpression("footer");
	if (ve != null) {
	    try {
		return (java.lang.Boolean)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setFooter(java.lang.Boolean value) {
	this.footer = value;
    }

    public java.lang.Boolean getFrame() {
	if (this.frame != null) {
	    return this.frame;
	}
	javax.el.ValueExpression ve = this.getValueExpression("frame");
	if (ve != null) {
	    try {
		return (java.lang.Boolean)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setFrame(java.lang.Boolean value) {
	this.frame = value;
    }

    public java.lang.Boolean getHeader() {
	if (this.header != null) {
	    return this.header;
	}
	javax.el.ValueExpression ve = this.getValueExpression("header");
	if (ve != null) {
	    try {
		return (java.lang.Boolean)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setHeader(java.lang.Boolean value) {
	this.header = value;
    }

    public java.lang.Boolean getHeaderAsText() {
	if (this.headerAsText != null) {
	    return this.headerAsText;
	}
	javax.el.ValueExpression ve = this.getValueExpression("headerAsText");
	if (ve != null) {
	    try {
		return (java.lang.Boolean)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setHeaderAsText(java.lang.Boolean value) {
	this.headerAsText = value;
    }

    public java.lang.Integer getHeight() {
	if (this.height != null) {
	    return this.height;
	}
	javax.el.ValueExpression ve = this.getValueExpression("height");
	if (ve != null) {
	    try {
		return (java.lang.Integer)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setHeight(java.lang.Integer value) {
	this.height = value;
    }

    public java.lang.Boolean getHideBorders() {
	if (this.hideBorders != null) {
	    return this.hideBorders;
	}
	javax.el.ValueExpression ve = this.getValueExpression("hideBorders");
	if (ve != null) {
	    try {
		return (java.lang.Boolean)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setHideBorders(java.lang.Boolean value) {
	this.hideBorders = value;
    }

    public java.lang.Boolean getHideCollapseTool() {
	if (this.hideCollapseTool != null) {
	    return this.hideCollapseTool;
	}
	javax.el.ValueExpression ve = this.getValueExpression("hideCollapseTool");
	if (ve != null) {
	    try {
		return (java.lang.Boolean)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setHideCollapseTool(java.lang.Boolean value) {
	this.hideCollapseTool = value;
    }

    public java.lang.Boolean getHideParent() {
	if (this.hideParent != null) {
	    return this.hideParent;
	}
	javax.el.ValueExpression ve = this.getValueExpression("hideParent");
	if (ve != null) {
	    try {
		return (java.lang.Boolean)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setHideParent(java.lang.Boolean value) {
	this.hideParent = value;
    }

    public java.lang.String getLayout() {
	if (this.layout != null) {
	    return this.layout;
	}
	javax.el.ValueExpression ve = this.getValueExpression("layout");
	if (ve != null) {
	    try {
		return (java.lang.String)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setLayout(java.lang.String value) {
	this.layout = value;
    }

    public java.lang.Boolean getMaskDisabled() {
	if (this.maskDisabled != null) {
	    return this.maskDisabled;
	}
	javax.el.ValueExpression ve = this.getValueExpression("maskDisabled");
	if (ve != null) {
	    try {
		return (java.lang.Boolean)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setMaskDisabled(java.lang.Boolean value) {
	this.maskDisabled = value;
    }

    public java.lang.Boolean getShadow() {
	if (this.shadow != null) {
	    return this.shadow;
	}
	javax.el.ValueExpression ve = this.getValueExpression("shadow");
	if (ve != null) {
	    try {
		return (java.lang.Boolean)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setShadow(java.lang.Boolean value) {
	this.shadow = value;
    }

    public java.lang.Integer getShadowOffset() {
	if (this.shadowOffset != null) {
	    return this.shadowOffset;
	}
	javax.el.ValueExpression ve = this.getValueExpression("shadowOffset");
	if (ve != null) {
	    try {
		return (java.lang.Integer)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setShadowOffset(java.lang.Integer value) {
	this.shadowOffset = value;
    }

    public java.lang.Boolean getShim() {
	if (this.shim != null) {
	    return this.shim;
	}
	javax.el.ValueExpression ve = this.getValueExpression("shim");
	if (ve != null) {
	    try {
		return (java.lang.Boolean)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setShim(java.lang.Boolean value) {
	this.shim = value;
    }

    public java.lang.String getTitle() {
	if (this.title != null) {
	    return this.title;
	}
	javax.el.ValueExpression ve = this.getValueExpression("title");
	if (ve != null) {
	    try {
		return (java.lang.String)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setTitle(java.lang.String value) {
	this.title = value;
    }

    public java.lang.Boolean getTitleCollapse() {
	if (this.titleCollapse != null) {
	    return this.titleCollapse;
	}
	javax.el.ValueExpression ve = this.getValueExpression("titleCollapse");
	if (ve != null) {
	    try {
		return (java.lang.Boolean)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setTitleCollapse(java.lang.Boolean value) {
	this.titleCollapse = value;
    }

    public java.lang.Integer getWidth() {
	if (this.width != null) {
	    return this.width;
	}
	javax.el.ValueExpression ve = this.getValueExpression("width");
	if (ve != null) {
	    try {
		return (java.lang.Integer)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setWidth(java.lang.Integer value) {
	this.width = value;
    }

    public java.lang.Boolean getAnimate() {
	if (this.animate != null) {
	    return this.animate;
	}
	javax.el.ValueExpression ve = this.getValueExpression("animate");
	if (ve != null) {
	    try {
		return (java.lang.Boolean)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setAnimate(java.lang.Boolean value) {
	this.animate = value;
    }

    public java.lang.Boolean getContainerScroll() {
	if (this.containerScroll != null) {
	    return this.containerScroll;
	}
	javax.el.ValueExpression ve = this.getValueExpression("containerScroll");
	if (ve != null) {
	    try {
		return (java.lang.Boolean)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setContainerScroll(java.lang.Boolean value) {
	this.containerScroll = value;
    }

    public java.lang.String getHlColor() {
	if (this.hlColor != null) {
	    return this.hlColor;
	}
	javax.el.ValueExpression ve = this.getValueExpression("hlColor");
	if (ve != null) {
	    try {
		return (java.lang.String)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setHlColor(java.lang.String value) {
	this.hlColor = value;
    }

    public java.lang.Boolean getRootVisible() {
	if (this.rootVisible != null) {
	    return this.rootVisible;
	}
	javax.el.ValueExpression ve = this.getValueExpression("rootVisible");
	if (ve != null) {
	    try {
		return (java.lang.Boolean)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setRootVisible(java.lang.Boolean value) {
	this.rootVisible = value;
    }

    public org.operamasks.faces.component.tree.base.TreeDataProvider getValue() {
	if (this.value != null) {
	    return this.value;
	}
	javax.el.ValueExpression ve = this.getValueExpression("value");
	if (ve != null) {
	    try {
		return (org.operamasks.faces.component.tree.base.TreeDataProvider)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setValue(org.operamasks.faces.component.tree.base.TreeDataProvider value) {
	this.value = value;
    }

    public java.lang.String getOncheck() {
	if (this.oncheck != null) {
	    return this.oncheck;
	}
	javax.el.ValueExpression ve = this.getValueExpression("oncheck");
	if (ve != null) {
	    try {
		return (java.lang.String)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setOncheck(java.lang.String value) {
	this.oncheck = value;
    }

    public java.lang.String getOnclick() {
	if (this.onclick != null) {
	    return this.onclick;
	}
	javax.el.ValueExpression ve = this.getValueExpression("onclick");
	if (ve != null) {
	    try {
		return (java.lang.String)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setOnclick(java.lang.String value) {
	this.onclick = value;
    }

    public java.lang.String getOncollapsenode() {
	if (this.oncollapsenode != null) {
	    return this.oncollapsenode;
	}
	javax.el.ValueExpression ve = this.getValueExpression("oncollapsenode");
	if (ve != null) {
	    try {
		return (java.lang.String)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setOncollapsenode(java.lang.String value) {
	this.oncollapsenode = value;
    }

    public java.lang.String getOnexpandnode() {
	if (this.onexpandnode != null) {
	    return this.onexpandnode;
	}
	javax.el.ValueExpression ve = this.getValueExpression("onexpandnode");
	if (ve != null) {
	    try {
		return (java.lang.String)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setOnexpandnode(java.lang.String value) {
	this.onexpandnode = value;
    }

    public java.lang.Boolean getSaveState() {
	if (this.saveState != null) {
	    return this.saveState;
	}
	javax.el.ValueExpression ve = this.getValueExpression("saveState");
	if (ve != null) {
	    try {
		return (java.lang.Boolean)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setSaveState(java.lang.Boolean value) {
	this.saveState = value;
    }

    public java.lang.String getExpandedNodes() {
	if (this.expandedNodes != null) {
	    return this.expandedNodes;
	}
	javax.el.ValueExpression ve = this.getValueExpression("expandedNodes");
	if (ve != null) {
	    try {
		return (java.lang.String)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setExpandedNodes(java.lang.String value) {
	this.expandedNodes = value;
    }

    public java.lang.Boolean getLoadAllNodes() {
	if (this.loadAllNodes != null) {
	    return this.loadAllNodes;
	}
	javax.el.ValueExpression ve = this.getValueExpression("loadAllNodes");
	if (ve != null) {
	    try {
		return (java.lang.Boolean)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setLoadAllNodes(java.lang.Boolean value) {
	this.loadAllNodes = value;
    }

    public java.lang.Boolean getExpandAll() {
	if (this.expandAll != null) {
	    return this.expandAll;
	}
	javax.el.ValueExpression ve = this.getValueExpression("expandAll");
	if (ve != null) {
	    try {
		return (java.lang.Boolean)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setExpandAll(java.lang.Boolean value) {
	this.expandAll = value;
    }

    public java.lang.String getEventName() {
	if (this.eventName != null) {
	    return this.eventName;
	}
	javax.el.ValueExpression ve = this.getValueExpression("eventName");
	if (ve != null) {
	    try {
		return (java.lang.String)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setEventName(java.lang.String value) {
	this.eventName = value;
    }

    public UITreeNode getEventNode() {
	if (this.eventNode != null) {
	    return this.eventNode;
	}
	javax.el.ValueExpression ve = this.getValueExpression("eventNode");
	if (ve != null) {
	    try {
		return (UITreeNode)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setEventNode(UITreeNode value) {
	this.eventNode = value;
    }

    public UITreeNode getSelectedNode() {
	if (this.selectedNode != null) {
	    return this.selectedNode;
	}
	javax.el.ValueExpression ve = this.getValueExpression("selectedNode");
	if (ve != null) {
	    try {
		return (UITreeNode)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setSelectedNode(UITreeNode value) {
	this.selectedNode = value;
    }

    public Object saveState(javax.faces.context.FacesContext context) {
	return new Object[] {
	    super.saveState(context),
	    this.animCollapse,
	    this.autoHeight,
	    this.autoScroll,
	    this.autoShow,
	    this.autoWidth,
	    this.bodyBorder,
	    this.bodyStyle,
	    this.border,
	    this.collapseFirst,
	    this.collapsed,
	    this.collapsible,
	    this.draggable,
	    this.floating,
	    this.footer,
	    this.frame,
	    this.header,
	    this.headerAsText,
	    this.height,
	    this.hideBorders,
	    this.hideCollapseTool,
	    this.hideParent,
	    this.layout,
	    this.maskDisabled,
	    this.shadow,
	    this.shadowOffset,
	    this.shim,
	    this.title,
	    this.titleCollapse,
	    this.width,
	    this.animate,
	    this.containerScroll,
	    this.hlColor,
	    this.rootVisible,
	    this.value,
	    this.oncheck,
	    this.onclick,
	    this.oncollapsenode,
	    this.onexpandnode,
	    this.saveState,
	    this.expandedNodes,
	    this.loadAllNodes,
	    this.expandAll,
	    this.eventName,
	    this.eventNode,
	    this.selectedNode,
	};
    }

    public void restoreState(javax.faces.context.FacesContext context, Object state) {
	Object[] values = (Object[])state;
	super.restoreState(context, values[0]);
	this.animCollapse = (java.lang.Boolean)values[1];
	this.autoHeight = (java.lang.Boolean)values[2];
	this.autoScroll = (java.lang.Boolean)values[3];
	this.autoShow = (java.lang.Boolean)values[4];
	this.autoWidth = (java.lang.Boolean)values[5];
	this.bodyBorder = (java.lang.Boolean)values[6];
	this.bodyStyle = (java.lang.String)values[7];
	this.border = (java.lang.Boolean)values[8];
	this.collapseFirst = (java.lang.Boolean)values[9];
	this.collapsed = (java.lang.Boolean)values[10];
	this.collapsible = (java.lang.Boolean)values[11];
	this.draggable = (java.lang.Boolean)values[12];
	this.floating = (java.lang.Boolean)values[13];
	this.footer = (java.lang.Boolean)values[14];
	this.frame = (java.lang.Boolean)values[15];
	this.header = (java.lang.Boolean)values[16];
	this.headerAsText = (java.lang.Boolean)values[17];
	this.height = (java.lang.Integer)values[18];
	this.hideBorders = (java.lang.Boolean)values[19];
	this.hideCollapseTool = (java.lang.Boolean)values[20];
	this.hideParent = (java.lang.Boolean)values[21];
	this.layout = (java.lang.String)values[22];
	this.maskDisabled = (java.lang.Boolean)values[23];
	this.shadow = (java.lang.Boolean)values[24];
	this.shadowOffset = (java.lang.Integer)values[25];
	this.shim = (java.lang.Boolean)values[26];
	this.title = (java.lang.String)values[27];
	this.titleCollapse = (java.lang.Boolean)values[28];
	this.width = (java.lang.Integer)values[29];
	this.animate = (java.lang.Boolean)values[30];
	this.containerScroll = (java.lang.Boolean)values[31];
	this.hlColor = (java.lang.String)values[32];
	this.rootVisible = (java.lang.Boolean)values[33];
	this.value = (org.operamasks.faces.component.tree.base.TreeDataProvider)values[34];
	this.oncheck = (java.lang.String)values[35];
	this.onclick = (java.lang.String)values[36];
	this.oncollapsenode = (java.lang.String)values[37];
	this.onexpandnode = (java.lang.String)values[38];
	this.saveState = (java.lang.Boolean)values[39];
	this.expandedNodes = (java.lang.String)values[40];
	this.loadAllNodes = (java.lang.Boolean)values[41];
	this.expandAll = (java.lang.Boolean)values[42];
	this.eventName = (java.lang.String)values[43];
	this.eventNode = (UITreeNode)values[44];
	this.selectedNode = (UITreeNode)values[45];
    }

}
