/**
 * UICardLayout.java
 * DO NOT EDIT THIS FILE
 * This file was automatically generated by org.operamasks.faces.tools.apt.ComponentAnnotationProcessorFactory
 * at Sat Nov 03 15:46:26 CST 2012
 */

package org.operamasks.faces.component.layout.impl;

import org.operamasks.faces.component.layout.base.UICardLayoutBase;

@javax.annotation.Generated(value="org.operamasks.faces.tools.apt.ComponentAnnotationProcessorFactory", date="2012-11-03T15:46:26Z")
public class UICardLayout extends UICardLayoutBase {
    public static final String COMPONENT_FAMILY = "org.operamasks.faces.component.layout.impl.UICardLayout";
    public static final String COMPONENT_TYPE = "org.operamasks.faces.component.layout.impl.UICardLayout";

    public UICardLayout() {
	super.setRendererType("org.operamasks.faces.component.layout.impl.UICardLayout");
    }

    public String getFamily() {
	return COMPONENT_FAMILY;
    }

    public java.lang.Integer getActiveItem() {
	if (this.activeItem != null) {
	    return this.activeItem;
	}
	javax.el.ValueExpression ve = this.getValueExpression("activeItem");
	if (ve != null) {
	    try {
		return (java.lang.Integer)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setActiveItem(java.lang.Integer value) {
	this.activeItem = value;
    }

    public java.lang.Boolean getDeferredRender() {
	if (this.deferredRender != null) {
	    return this.deferredRender;
	}
	javax.el.ValueExpression ve = this.getValueExpression("deferredRender");
	if (ve != null) {
	    try {
		return (java.lang.Boolean)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setDeferredRender(java.lang.Boolean value) {
	this.deferredRender = value;
    }

    public Object saveState(javax.faces.context.FacesContext context) {
	return new Object[] {
	    super.saveState(context),
	    this.activeItem,
	    this.deferredRender,
	};
    }

    public void restoreState(javax.faces.context.FacesContext context, Object state) {
	Object[] values = (Object[])state;
	super.restoreState(context, values[0]);
	this.activeItem = (java.lang.Integer)values[1];
	this.deferredRender = (java.lang.Boolean)values[2];
    }

}
