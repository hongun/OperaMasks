/**
 * UIFormLayout.java
 * DO NOT EDIT THIS FILE
 * This file was automatically generated by org.operamasks.faces.tools.apt.ComponentAnnotationProcessorFactory
 * at Sat Nov 03 15:46:26 CST 2012
 */

package org.operamasks.faces.component.layout.impl;

import org.operamasks.faces.component.layout.base.UIFormLayoutBase;

@javax.annotation.Generated(value="org.operamasks.faces.tools.apt.ComponentAnnotationProcessorFactory", date="2012-11-03T15:46:26Z")
public class UIFormLayout extends UIFormLayoutBase {
    public static final String COMPONENT_FAMILY = "org.operamasks.faces.component.layout.impl.UIFormLayout";
    public static final String COMPONENT_TYPE = "org.operamasks.faces.component.layout.impl.UIFormLayout";

    public UIFormLayout() {
	super.setRendererType("org.operamasks.faces.component.layout.impl.UIFormLayout");
    }

    public String getFamily() {
	return COMPONENT_FAMILY;
    }

    public java.lang.Boolean getHideLabels() {
	if (this.hideLabels != null) {
	    return this.hideLabels;
	}
	javax.el.ValueExpression ve = this.getValueExpression("hideLabels");
	if (ve != null) {
	    try {
		return (java.lang.Boolean)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setHideLabels(java.lang.Boolean value) {
	this.hideLabels = value;
    }

    public java.lang.String getItemCls() {
	if (this.itemCls != null) {
	    return this.itemCls;
	}
	javax.el.ValueExpression ve = this.getValueExpression("itemCls");
	if (ve != null) {
	    try {
		return (java.lang.String)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setItemCls(java.lang.String value) {
	this.itemCls = value;
    }

    public java.lang.String getLabelAlign() {
	if (this.labelAlign != null) {
	    return this.labelAlign;
	}
	javax.el.ValueExpression ve = this.getValueExpression("labelAlign");
	if (ve != null) {
	    try {
		return (java.lang.String)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setLabelAlign(java.lang.String value) {
	this.labelAlign = value;
    }

    public java.lang.Integer getLabelPad() {
	if (this.labelPad != null) {
	    return this.labelPad;
	}
	javax.el.ValueExpression ve = this.getValueExpression("labelPad");
	if (ve != null) {
	    try {
		return (java.lang.Integer)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setLabelPad(java.lang.Integer value) {
	this.labelPad = value;
    }

    public java.lang.Integer getLabelWidth() {
	if (this.labelWidth != null) {
	    return this.labelWidth;
	}
	javax.el.ValueExpression ve = this.getValueExpression("labelWidth");
	if (ve != null) {
	    try {
		return (java.lang.Integer)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setLabelWidth(java.lang.Integer value) {
	this.labelWidth = value;
    }

    public java.lang.String getClearCls() {
	if (this.clearCls != null) {
	    return this.clearCls;
	}
	javax.el.ValueExpression ve = this.getValueExpression("clearCls");
	if (ve != null) {
	    try {
		return (java.lang.String)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setClearCls(java.lang.String value) {
	this.clearCls = value;
    }

    public java.lang.String getFieldLabel() {
	if (this.fieldLabel != null) {
	    return this.fieldLabel;
	}
	javax.el.ValueExpression ve = this.getValueExpression("fieldLabel");
	if (ve != null) {
	    try {
		return (java.lang.String)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setFieldLabel(java.lang.String value) {
	this.fieldLabel = value;
    }

    public java.lang.Boolean getHideLabel() {
	if (this.hideLabel != null) {
	    return this.hideLabel;
	}
	javax.el.ValueExpression ve = this.getValueExpression("hideLabel");
	if (ve != null) {
	    try {
		return (java.lang.Boolean)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setHideLabel(java.lang.Boolean value) {
	this.hideLabel = value;
    }

    public java.lang.String getLabelSeparator() {
	if (this.labelSeparator != null) {
	    return this.labelSeparator;
	}
	javax.el.ValueExpression ve = this.getValueExpression("labelSeparator");
	if (ve != null) {
	    try {
		return (java.lang.String)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setLabelSeparator(java.lang.String value) {
	this.labelSeparator = value;
    }

    public java.lang.String getLabelStyle() {
	if (this.labelStyle != null) {
	    return this.labelStyle;
	}
	javax.el.ValueExpression ve = this.getValueExpression("labelStyle");
	if (ve != null) {
	    try {
		return (java.lang.String)ve.getValue(this.getFacesContext().getELContext());
	    } catch (javax.el.ELException e) {
		throw new javax.faces.FacesException(e);
	    }
	}
	return null;
    }

    public void setLabelStyle(java.lang.String value) {
	this.labelStyle = value;
    }

    public Object saveState(javax.faces.context.FacesContext context) {
	return new Object[] {
	    super.saveState(context),
	    this.hideLabels,
	    this.itemCls,
	    this.labelAlign,
	    this.labelPad,
	    this.labelWidth,
	    this.clearCls,
	    this.fieldLabel,
	    this.hideLabel,
	    this.labelSeparator,
	    this.labelStyle,
	};
    }

    public void restoreState(javax.faces.context.FacesContext context, Object state) {
	Object[] values = (Object[])state;
	super.restoreState(context, values[0]);
	this.hideLabels = (java.lang.Boolean)values[1];
	this.itemCls = (java.lang.String)values[2];
	this.labelAlign = (java.lang.String)values[3];
	this.labelPad = (java.lang.Integer)values[4];
	this.labelWidth = (java.lang.Integer)values[5];
	this.clearCls = (java.lang.String)values[6];
	this.fieldLabel = (java.lang.String)values[7];
	this.hideLabel = (java.lang.Boolean)values[8];
	this.labelSeparator = (java.lang.String)values[9];
	this.labelStyle = (java.lang.String)values[10];
    }

}
